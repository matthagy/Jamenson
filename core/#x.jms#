;; eXperimental stuff

(progn
  (b:__import__ "jamenson.compiler.translate")
  (b:__import__ "jamenson.compiler.block")
)

(let* ((jamenson  (b:__import__ "jamenson.compiler.translate"))
       (translate jamenson.compiler.translate)
       (block jamenson.compiler.block)
       (compile_time_eval block.compile_time_eval)
       (translate_top_level_form translate.translate_top_level_form))
  (defun x!bompile (form &keys filename form-locations)
    "compile form into a function"
    (let* ((ir (translate_top_level_form :form_locations form-locations
                                         :filename filename))
           (ir (evaluate_compile_time_values ir compile_time_eval))
           (ir (transform_load_times ir))
           (ir (transform_global_symbol_use ir)))
      
      )
    (unless env
      (setq env ((attr (globals) copy))))
    (when (isinstance env brooke.bompiler.trans.Translator)
      (unless form-locs
        (setq form-locs env.formLocs))
      (unless filename
        (setq filename env.filename))
      (setq env (env.globals.copy)))
    (assert (isinstance env dict))
    (.makeFunction
      (.translateTopLevel 
        (brooke.bompiler.trans.Translator env
                :formLocs form-locs
                :filename (or filename "<string>"))
        form))))

(defun x!eval (form &remaining-keys keys)
  ((x!bompile `(€ô¦¦†ëlambda () ,form) &remaining-keys keys)))
